generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String         @id @default(cuid())
  name              String?
  email             String?        @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  jdResumeTexts     JdResumeText[]
  sessions          Session[]
  interviewSessions SessionData[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model JdResumeText {
  id                String        @id @default(cuid())
  jdText            String
  resumeText        String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  userId            String
  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  interviewSessions SessionData[]
}

model SessionData {
  id                   String       @id @default(cuid())
  personaId            String
  startTime            DateTime     @default(now())
  endTime              DateTime?
  durationInSeconds    Int
  questionSegments     Json
  currentQuestionIndex Int          @default(0)
  overallSummary       String?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  userId               String
  jdResumeTextId       String
  jdResumeText         JdResumeText @relation(fields: [jdResumeTextId], references: [id], onDelete: Cascade)
  user                 User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}
